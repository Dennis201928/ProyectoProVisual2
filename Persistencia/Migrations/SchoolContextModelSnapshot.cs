// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Virtual;

namespace Persistencia.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Modelo.Escuela.carro", b =>
                {
                    b.Property<int>("carroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("marcaId")
                        .HasColumnType("integer");

                    b.Property<int>("modeloId")
                        .HasColumnType("integer");

                    b.HasKey("carroId");

                    b.HasIndex("marcaId");

                    b.HasIndex("modeloId");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("Modelo.Escuela.cliente", b =>
                {
                    b.Property<int>("clienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("edad")
                        .HasColumnType("text");

                    b.Property<int>("generoId")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("clienteId");

                    b.HasIndex("generoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Modelo.Escuela.genero", b =>
                {
                    b.Property<int>("generoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("nomgenero")
                        .HasColumnType("integer");

                    b.HasKey("generoId");

                    b.ToTable("generos");
                });

            modelBuilder.Entity("Modelo.Escuela.iva", b =>
                {
                    b.Property<int>("ivaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("arancel")
                        .HasColumnType("integer");

                    b.Property<int>("im_sali_divisas")
                        .HasColumnType("integer");

                    b.Property<int>("im_sali_divisas_isd")
                        .HasColumnType("integer");

                    b.Property<int>("im_val_agregado")
                        .HasColumnType("integer");

                    b.Property<int>("imrodaje")
                        .HasColumnType("integer");

                    b.HasKey("ivaId");

                    b.ToTable("ivas");
                });

            modelBuilder.Entity("Modelo.Escuela.marca", b =>
                {
                    b.Property<int>("marcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nommarca")
                        .HasColumnType("text");

                    b.HasKey("marcaId");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("Modelo.Escuela.modelo", b =>
                {
                    b.Property<int>("modeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<string>("nombre_modelo")
                        .HasColumnType("text");

                    b.Property<int>("npuertas")
                        .HasColumnType("integer");

                    b.HasKey("modeloId");

                    b.ToTable("modelos");
                });

            modelBuilder.Entity("Modelo.Escuela.tipopago", b =>
                {
                    b.Property<int>("tipopagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("tipopagoId");

                    b.ToTable("tipopagos");
                });

            modelBuilder.Entity("Modelo.Escuela.venta", b =>
                {
                    b.Property<int>("ventaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("carroId")
                        .HasColumnType("integer");

                    b.Property<int>("clienteId")
                        .HasColumnType("integer");

                    b.Property<int>("ivaId")
                        .HasColumnType("integer");

                    b.Property<int>("precio")
                        .HasColumnType("integer");

                    b.Property<int>("tipopagoId")
                        .HasColumnType("integer");

                    b.Property<int>("total")
                        .HasColumnType("integer");

                    b.HasKey("ventaId");

                    b.HasIndex("carroId");

                    b.HasIndex("clienteId");

                    b.HasIndex("ivaId");

                    b.HasIndex("tipopagoId");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("Modelo.Escuela.carro", b =>
                {
                    b.HasOne("Modelo.Escuela.marca", "marca")
                        .WithMany("carros")
                        .HasForeignKey("marcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Escuela.modelo", "modelo")
                        .WithMany("carros")
                        .HasForeignKey("modeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("Modelo.Escuela.cliente", b =>
                {
                    b.HasOne("Modelo.Escuela.genero", "genero")
                        .WithMany("clientes")
                        .HasForeignKey("generoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genero");
                });

            modelBuilder.Entity("Modelo.Escuela.venta", b =>
                {
                    b.HasOne("Modelo.Escuela.carro", "carro")
                        .WithMany("ventas")
                        .HasForeignKey("carroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Escuela.cliente", "cliente")
                        .WithMany("ventas")
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Escuela.iva", "iva")
                        .WithMany("ventas")
                        .HasForeignKey("ivaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Escuela.tipopago", "tipopago")
                        .WithMany("ventas")
                        .HasForeignKey("tipopagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carro");

                    b.Navigation("cliente");

                    b.Navigation("iva");

                    b.Navigation("tipopago");
                });

            modelBuilder.Entity("Modelo.Escuela.carro", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("Modelo.Escuela.cliente", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("Modelo.Escuela.genero", b =>
                {
                    b.Navigation("clientes");
                });

            modelBuilder.Entity("Modelo.Escuela.iva", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("Modelo.Escuela.marca", b =>
                {
                    b.Navigation("carros");
                });

            modelBuilder.Entity("Modelo.Escuela.modelo", b =>
                {
                    b.Navigation("carros");
                });

            modelBuilder.Entity("Modelo.Escuela.tipopago", b =>
                {
                    b.Navigation("ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
